# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:
- group: ENV_GLOBAL

pool:
  name: k8s-azure-devops-agent

# pool:
#   vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '17.x'
  displayName: 'Install Node.js'

- script: |
    docker help
    # npm install
    # npm run build
  displayName: 'npm install and build'


- script: |
    kaniko/executor --context $(Build.SourcesDirectory) --dockerfile $(Build.SourcesDirectory)/Dockerfile --destination <nome-da-imagem>:<tag>
    echo "Variável não secreta: $(dockerHubUsername)"
    echo "Variável secreta está mapeada, mas não será visível no log: $dockerHubUsername"
  env:
    SECRET_VAR: $(dockerHubUsername)
  displayName: 'Print Variable'

- task: Docker@2
  inputs:
    containerRegistry: 'DockerEhubPrivate'
    repository: 'raphadocker/portaria-backend'
    command: 'buildAndPush'
    Dockerfile: '.'

- script: |
    echo "Exemplo de variável secreta: $dockerHubUsername"
    echo "Exemplo de variável secreta: $(dockerHubUsername)"
    echo "Exemplo de variável secreta: $dockerHubPassword"
    echo "Exemplo de variável secreta: $(dockerHubPassword)"
    # echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    # docker build -t portaria-backend:$(Build.BuildId) .
    # docker login -u $(dockerHubUsername) -p $(dockerHubPassword)
    # docker tag portaria-backend:$(Build.BuildId) $(dockerHubUsername)/portaria-backend:$(Build.BuildId)
    # docker push $(dockerHubUsername)/portaria-backend:$(Build.BuildId)
  displayName: 'Build and push Docker image'

- script: echo "Build and Docker push completed"
  displayName: 'Completion message'