# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
    - release/*


##vso[release.updatereleasename]release name

variables:
  group: ENV_GLOBAL
  application-name: portaria-backend

pool:
  name: k8s-azure-devops-agent


steps:
- bash: |
    version=$(echo "$(Build.SourceBranch)" | sed 's|refs/heads/release/||')
    echo "##vso[release.updatereleasename]$version"
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'echo "Task em branco executada"'
    # Ou simplesmente: script: 'true'
  displayName: 'Task em Branco'

# pool:
#   vmImage: ubuntu-latest

# steps:
# - task: NodeTool@0
#   inputs:
#     versionSpec: '17.x'
#   displayName: 'Install Node.js'

# - script: |
#     docker help
#     # npm install
#     # npm run build
#   displayName: 'npm install and build'

# - script: |
#     buildah bud --format docker -t $(dockerHubUsername)/portaria-backend:$(Build.BuildId) .
#   displayName: 'Construir Imagem com Buildah'

# - script: |
#     buildah login --username $(dockerHubUsername) --password $(dockerHubPassword) docker.io
#     buildah push $(dockerHubUsername)/portaria-backend:$(Build.BuildId) docker://$(dockerHubUsername)/portaria-backend:$(Build.BuildId)
#   env:
#     SECRET_VAR: $(dockerHubUsername)
#   displayName: 'Print Variable'

# # - task: Docker@2
# #   inputs:
# #     containerRegistry: 'DockerEhubPrivate'
# #     repository: 'raphadocker/portaria-backend'
# #     command: 'buildAndPush'
# #     Dockerfile: '.'

# - script: |
#     echo "Exemplo de vari√°vel secreta: $dockerHubUsername"
#   displayName: 'Build and push Docker image'

# - script: echo "Build and Docker push completed"
#   displayName: 'Completion message'